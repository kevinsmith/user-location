{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 8fcc541d8a6f8a2edb6a","webpack:///src/index.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","UserLocation","_ref","apiKey","_ref$cacheTtl","cacheTtl","undefined","_ref$fallback","fallback","_ref$specificity","specificity","_classCallCheck","coordsLoaded","coords","latitude","longitude","accuracy","promise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","err","message","code","Error","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,MACCK,KAAA,WACD,mBCNA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAN,OAGA,IAAAC,GAAAM,EAAAD,IACAN,WACAQ,GAAAF,EACAG,QAAA,EAUA,OANAC,GAAAJ,GAAAK,KAAAV,EAAAD,QAAAC,EAAAA,EAAAD,QAAAK,GAGAJ,EAAAQ,QAAA,EAGAR,EAAAD,QAvBA,GAAAO,KAqCA,OATAF,GAAAO,EAAAF,EAGAL,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,GAGAT,EAAA,kLCtCqBU,GACnB,QAAAA,GAAAC,GAKG,GAJDC,GAICD,EAJDC,OAICC,EAAAF,EAHDG,SAAAA,EAGCC,SAAAF,EAHU,OAGVA,EAAAG,EAAAL,EAFDM,SAAAA,EAECF,SAAAC,EAFU,QAEVA,EAAAE,EAAAP,EADDQ,YAAAA,EACCJ,SAAAG,EADa,UACbA,CAAAE,GAAArB,KAAAW,EACD,IAAIW,IAAe,EAEbC,GACJC,SAAU,KACVC,UAAW,KACXC,SAAU,MAGNC,EAAU,GAAIC,SAAQ,SAACC,EAASC,GACpC,GAAIR,EACFO,EAAQN,OACH,IAAoB,UAAhBH,EACTW,UAAUC,YAAYC,mBACpB,SAACC,GACCZ,GAAe,EACfC,EAAOC,SAAWU,EAAIX,OAAOC,SAC7BD,EAAOE,UAAYS,EAAIX,OAAOE,UAC9BF,EAAOG,SAAWQ,EAAIX,OAAOG,SAC7BG,EAAQN,IAEV,SAACY,GACCL,EAAUK,EAAIC,QAAd,iBAAsCD,EAAIE,KAA1C,WAGC,IAAoB,YAAhBjB,EAGT,KAAM,IAAIkB,OAAM,0DAMpB,OAFAC,SAAQC,IAAI3B,EAAQE,EAAUG,GAEvBS,aAxCUhB","file":"UserLocation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"UserLocation\"] = factory();\n\telse\n\t\troot[\"UserLocation\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8fcc541d8a6f8a2edb6a\n **/","export default class UserLocation {\n  constructor({\n    apiKey,\n    cacheTtl = 604800, // 7 days\n    fallback = 'exact', // If IP-based geolocation fails\n    specificity = 'general',\n  }) {\n    let coordsLoaded = false;\n\n    const coords = {\n      latitude: null,\n      longitude: null,\n      accuracy: null,\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      if (coordsLoaded) {\n        resolve(coords);\n      } else if (specificity === 'exact') {\n        navigator.geolocation.getCurrentPosition(\n          (pos) => {\n            coordsLoaded = true;\n            coords.latitude = pos.coords.latitude;\n            coords.longitude = pos.coords.longitude;\n            coords.accuracy = pos.coords.accuracy;\n            resolve(coords);\n          },\n          (err) => {\n            reject(`${err.message} (error code: ${err.code})`);\n          }\n        );\n      } else if (specificity === 'general') {\n        // Use GeoIP lookup to get general area\n      } else {\n        throw new Error('Invalid configuration value for location specificity.');\n      }\n    });\n\n    console.log(apiKey, cacheTtl, fallback);\n\n    return promise;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":"/source/"}