{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 8310745af6f8c9e7a66a","webpack:///src/index.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","UserLocation","_this","_ref","arguments","length","undefined","_ref$cacheTtl","cacheTtl","_ref$fallback","fallback","_ref$specificity","specificity","_classCallCheck","coords","latitude","longitude","accuracy","opt","fallbackPromise","originalPromise","getExact","Error","getGeneral","then","catch","_this2","promise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","err","message","code","_this3","fetch","response","ok","json","type","msg","location","accuracy_radius","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,MACCK,KAAA,WACD,mBCNA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAN,OAGA,IAAAC,GAAAM,EAAAD,IACAN,WACAQ,GAAAF,EACAG,QAAA,EAUA,OANAC,GAAAJ,GAAAK,KAAAV,EAAAD,QAAAC,EAAAA,EAAAD,QAAAK,GAGAJ,EAAAQ,QAAA,EAGAR,EAAAD,QAvBA,GAAAO,KAqCA,OATAF,GAAAO,EAAAF,EAGAL,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,GAGAT,EAAA,waCtCqBU,aACnB,QAAAA,KAIQ,GAAAC,GAAAZ,KAAAa,EAAAC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,MAAAA,UAAA,GAAAG,EAAAJ,EAHNK,SAAAA,EAGMF,SAAAC,EAHK,OAGLA,EAAAE,EAAAN,EAFNO,SAAAA,EAEMJ,SAAAG,GAAAA,EAAAE,EAAAR,EADNS,YAAAA,EACMN,SAAAK,EADQ,UACRA,CAAAE,GAAAvB,KAAAW,GACNX,KAAKwB,QACHC,SAAU,KACVC,UAAW,KACXC,SAAU,MAEZ3B,KAAK4B,KAAQV,SAAAA,EAAUE,SAAAA,EAAUE,YAAAA,EACjC,IAAIO,GAAA,OACAC,EAAA,MAEJ,IAAoB,UAAhBR,EACFQ,EAAkB9B,KAAK+B,eAClB,CAAA,GAAoB,YAAhBT,EAGT,KAAM,IAAIU,OAAM,wDAFhBF,GAAkB9B,KAAKiC,aAKzB,MAAOH,GACJI,KAAK,WAAA,MAAMJ,KACXK,MAAM,WASL,MAPEN,GADe,UAAbT,EACgBR,EAAKmB,WACD,YAAbX,EACSR,EAAKqB,aAELH,iDAOf,GAAAM,GAAApC,KACHqC,EAAU,GAAIC,SAAQ,SAACC,EAASC,GACpCC,UAAUC,YAAYC,mBACpB,SAACC,GACCR,EAAKZ,OAAOC,SAAWmB,EAAIpB,OAAOC,SAClCW,EAAKZ,OAAOE,UAAYkB,EAAIpB,OAAOE,UACnCU,EAAKZ,OAAOG,SAAWiB,EAAIpB,OAAOG,SAClCY,EAAQH,EAAKZ,SAEf,SAACqB,GACCL,EAAUK,EAAIC,QAAd,iBAAsCD,EAAIE,KAA1C,QAKN,OAAOV,wCAGI,GAAAW,GAAAhD,KACLqC,EAAU,GAAIC,SAAQ,SAACC,EAASC,GACpCS,MAAM,oCACHf,KAAK,SAACgB,GACDA,EAASC,GACXD,EAASE,OACNlB,KAAK,SAACkB,GACa,UAAdA,EAAKC,KACPb,EAAOY,EAAKE,MAGZN,EAAKxB,OAAOG,SAA2C,IAAhCyB,EAAKG,SAASC,gBACrCR,EAAKxB,OAAOC,SAAW2B,EAAKG,SAAS9B,SACrCuB,EAAKxB,OAAOE,UAAY0B,EAAKG,SAAS7B,UACtCa,EAAQS,EAAKxB,WAKnBgB,EAAOU,EAASO,cAGnBtB,MAAM,SAACU,GACNL,EAAOK,EAAIC,YAIjB,OAAOT,sBAnFU1B","file":"UserLocation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"UserLocation\"] = factory();\n\telse\n\t\troot[\"UserLocation\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8310745af6f8c9e7a66a\n **/","export default class UserLocation {\n  constructor({\n    cacheTtl = 604800, // 7 days\n    fallback = false, // If 'specificity' fails\n    specificity = 'general',\n  } = {}) {\n    this.coords = {\n      latitude: null,\n      longitude: null,\n      accuracy: null, // in meters\n    };\n    this.opt = { cacheTtl, fallback, specificity };\n    let fallbackPromise;\n    let originalPromise;\n\n    if (specificity === 'exact') {\n      originalPromise = this.getExact();\n    } else if (specificity === 'general') {\n      originalPromise = this.getGeneral();\n    } else {\n      throw new Error('Invalid configuration value for location specificity.');\n    }\n\n    return originalPromise\n      .then(() => originalPromise)\n      .catch(() => {\n        if (fallback === 'exact') {\n          fallbackPromise = this.getExact();\n        } else if (fallback === 'general') {\n          fallbackPromise = this.getGeneral();\n        } else {\n          fallbackPromise = originalPromise;\n        }\n\n        return fallbackPromise;\n      });\n  }\n\n  getExact() {\n    const promise = new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (pos) => {\n          this.coords.latitude = pos.coords.latitude;\n          this.coords.longitude = pos.coords.longitude;\n          this.coords.accuracy = pos.coords.accuracy;\n          resolve(this.coords);\n        },\n        (err) => {\n          reject(`${err.message} (error code: ${err.code})`);\n        }\n      );\n    });\n\n    return promise;\n  }\n\n  getGeneral() {\n    const promise = new Promise((resolve, reject) => {\n      fetch('https://geoip.nekudo.com/api/', {})\n        .then((response) => {\n          if (response.ok) {\n            response.json()\n              .then((json) => {\n                if (json.type === 'error') {\n                  reject(json.msg);\n                } else {\n                  // Convert Maxmind's accuracy in kilometers to this lib's standard in meters\n                  this.coords.accuracy = json.location.accuracy_radius * 1000;\n                  this.coords.latitude = json.location.latitude;\n                  this.coords.longitude = json.location.longitude;\n                  resolve(this.coords);\n                }\n              }\n            );\n          } else {\n            reject(response.statusText);\n          }\n        })\n        .catch((err) => {\n          reject(err.message);\n        });\n    });\n\n    return promise;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":"/source/"}